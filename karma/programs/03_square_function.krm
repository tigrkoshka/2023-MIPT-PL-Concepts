sqr:                      # a function calculating the square with one argument on the stack
    loadr r0 r14 3        # load the first (and only) argument to r0
    mov r2 r0 0           # copy from r0 to r2
    mul r0 r2 0           # a pair of registers (r0,r1) contains the square
    ret 0                 # return from function and remove the argument from the stack

intout:                   # a function printing its argument and ‘\n’
    loadr r0 r14 3        # load the first (and only) argument to r0
    syscall r0 102        # print r0 to stdout
    lc r0 10              # store the constant 10 (‘\n’) to r0
    syscall r0 105        # print ‘\n’ from r0 to stdout
    ret 0                 # return from function and remove the argument from the stack

main:
    syscall r0 100        # read an integer from stdin to r0
    push r13 0            # push the stack pointer value before the caller's local variables
    mov r13 r14 0         # remember the stack pointer value before the function arguments
    push r0 0             # put r0+0 to the stack as the sqr argument
    calli sqr             # call sqr, the function will put the result to r0
    push r0 0             # prepare the result of sqr to be passed to intout
    calli intout          # call intout with the prepared argument
    lc r0 0               # set return code to 0
    syscall r0 0          # exit the program with code 0 from r0
end main                  # start execution from label main